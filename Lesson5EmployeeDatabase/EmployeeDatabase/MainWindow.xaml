<Window x:Class="EmployeeDatabase.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EmployeeDatabase"
        xmlns:data="clr-namespace:EmployeeDatabase.Data;assembly=EmployeeDatabase.Data"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        mc:Ignorable="d"
        Title="MainWindow" 
        Height="450" Width="800" 
        d:DataContext="{d:DesignInstance data:Enterprise}">
    <!-- d:DataContext="{d:DesignInstance data:Enterprise} - атрибут этапа отладки - можно добавить что бы Студия понимала какого типа у нас контекст данных -->
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem Header="Exit">
                    <MenuItem.Command>
                        <local:CloseApplication/>
                    </MenuItem.Command>
                </MenuItem>
            </MenuItem>
        </Menu>
        <GroupBox>
            <GroupBox.Header>
                <TextBlock>
                    <TextBlock Text="Имя предприятия:" />
                    <TextBlock Text="{Binding Name}" />
                </TextBlock>
            </GroupBox.Header>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="235*" />
                    <ColumnDefinition Width="546*" />
                </Grid.ColumnDefinitions>
                <!-- Ниже закомментирован код для редактирования имени предприятия -->
                <!--<TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" 
                     VerticalAlignment="Top" HorizontalAlignment="Left"/>-->
                <GroupBox Header="Отделы">
                    <DockPanel>
                        <Button DockPanel.Dock="Bottom" RenderTransformOrigin="0.5,0.5" Content="Добавить"
                                Click="AddDepartamentButton_OnClick">
                            <Button.RenderTransform>
                                <RotateTransform Angle="0" x:Name="ButtonRotate" />
                            </Button.RenderTransform>
                            <!-- Ниже код подключения триггеров-событий для воспроизведения анимации -->
                            <!--<Button.Triggers>
                            <EventTrigger RoutedEvent="Button.MouseEnter">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ButtonRotate" 
                                                         Storyboard.TargetProperty="Angle"
                                                         To="90" Duration="0:0:5"/>
                                        <ColorAnimation To="Red" Duration="0:0:1" Storyboard.TargetProperty="(ButtonBase.Background).(SolidColorBrush.Color)"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Button.MouseLeave">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="ButtonRotate" 
                                                         Storyboard.TargetProperty="Angle"
                                                         To="0" Duration="0:0:5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Button.Triggers>-->
                        </Button>
                        <ListBox ItemsSource="{Binding Departaments}" Name="DepartamentsList">
                            <ListBox.Style>
                                <Style TargetType="ListBox">
                                    <!--<Setter Property="Background" Value="Green" />
                                    --><!-- Определение триггеров для стиля даёт больше номенклатуру триггеров и больше их возможностей --><!--
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="Red" />
                                        </Trigger>

                                        --><!-- Триггер данных можно подключить к чему угодно! --><!--
                                        <DataTrigger Binding="{Binding Name}" Value="qwe">
                                            <Setter Property="Foreground" Value="Lime" />
                                        </DataTrigger>

                                        --><!-- Мульти-триггер сработает только при выполнении ВСЕХ установленных для него условий --><!--
                                        <MultiTrigger>
                                            <MultiTrigger.Conditions>
                                                <Condition Property="IsMouseOver" Value="True" />
                                                <Condition Property="IsEnabled" Value="True" />
                                            </MultiTrigger.Conditions>

                                            <Setter Property="Foreground" Value="Aqua" />
                                        </MultiTrigger>
                                    </Style.Triggers>-->
                                </Style>
                            </ListBox.Style>
                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="data:Departament">
                                    <TextBlock Text="{Binding Name}" />
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </DockPanel>
                </GroupBox>
                <GroupBox Header="Список сотрудников" Grid.Column="1">
                    <ListView
                        ItemsSource="{Binding ElementName=DepartamentsList, Path=SelectedItem.(data:Departament.Employees)}"
                        VirtualizingPanel.IsVirtualizing="True">
                        <ListView.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel />
                            </ItemsPanelTemplate>
                        </ListView.ItemsPanel>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Имя" Width="Auto" DisplayMemberBinding="{Binding Name}">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding}" Foreground="Red" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Возраст" DisplayMemberBinding="{Binding Age}" />
                                <GridViewColumn Header="Зарплата" DisplayMemberBinding="{Binding Salary}" />
                                <GridViewColumn Header="Коментарий" DisplayMemberBinding="{Binding Comment}" />
                            </GridView>
                        </ListView.View>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <EventSetter Event="MouseLeftButtonUp" Handler="ListViewItem_MouseLeftButtonUp"/>
                            </Style>
                        </ListView.ItemContainerStyle>
                    </ListView>
                </GroupBox>
            </Grid>
        </GroupBox>
    </DockPanel>
</Window>
